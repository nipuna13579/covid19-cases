{"version":3,"sources":["components/Country/Country.js","components/CountryList/CountryList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","stats","className","src","CountryCode","alt","Active","Confirmed","Deaths","Recovered","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","countries","fetch","resp","json","this","forEach","a","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAkBeA,G,YAfC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,IAAG,sCAAiCF,EAAMG,YAAvC,gBAAmEC,IAAKJ,EAAMD,UACtF,6BAAKC,EAAMD,UACX,sBAAKE,UAAU,WAAf,UACI,+CAAgBD,EAAMK,UACtB,kDAAmBL,EAAMM,aACzB,+CAAgBN,EAAMO,UACtB,kDAAmBP,EAAMQ,qBCE1BC,G,MAVK,SAAC,GAAY,IAAXT,EAAU,EAAVA,MAClB,OACI,qBAAKC,UAAU,cAAf,SAEED,EAAMU,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAmCX,MAAOW,GAA5BA,EAAQR,oBCKtCS,G,MAVI,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAC7B,OACI,uBAAOC,KAAK,SACZd,UAAU,SACVY,YAAaA,EACbG,SAAUF,MCwCHG,E,kDA1Cb,aAAc,IAAD,8BACX,gBAsBFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAtBpC,EAAKC,MAAQ,CACXC,UAAU,GACVxB,MAAM,GACNoB,YAAY,IALH,E,yMAUQK,MAAM,wC,cAAnBC,E,gBACkBA,EAAKC,O,OAAvBH,E,OACNI,KAAKT,SAAS,CAACK,cACfI,KAAKL,MAAMC,UAAUK,QAArB,uCAA6B,WAAMlB,GAAN,iBAAAmB,EAAA,sEACRL,MAAM,4CAAD,OAA6Cd,EAAQoB,OADlD,cACrBL,EADqB,gBAERA,EAAKC,OAFG,QAErBK,EAFqB,QAGnBC,QACR,EAAKd,UAAS,SAAAe,GAAS,MACrB,CAAClC,MAAMkC,EAAUlC,MAAMmC,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAS,IAA9C,IAAkD9B,YAAYQ,EAAQyB,YALpD,2CAA7B,kCAAAR,KAAA,gB,qIAcO,IAAD,EACuBA,KAAKL,MAA3BvB,EADD,EACCA,MAAMoB,EADP,EACOA,YACPiB,EAAoBrC,EAAMsC,QAAO,SAAA3B,GAAO,OAC5CA,EAAQZ,QAAQwC,cAAcC,SAASpB,EAAYmB,kBAErD,OACG,sBAAKtC,UAAU,MAAf,UACA,uDACC,cAAC,EAAD,CAAWY,YAAY,wBAAwBC,aAAcc,KAAKd,eAClE,cAAC,EAAD,CAAad,MAASqC,W,GArCZI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ff9c42b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Country.css';\r\n\r\nconst Country = ({stats}) => {\r\n    return(\r\n        <div className='country'>\r\n            <img src={`https://www.countryflags.io/${stats.CountryCode}/flat/64.png`}  alt={stats.Country}></img>\r\n            <h2>{stats.Country}</h2>\r\n            <div className='describe'>\r\n                <p>{`Active : ${stats.Active}`}</p>\r\n                <p>{`Confirmed : ${stats.Confirmed}`}</p>\r\n                <p>{`Deaths : ${stats.Deaths}`}</p>\r\n                <p>{`Recovered : ${stats.Recovered}`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport Country from '../Country/Country'\r\nimport './CountryList.css'\r\n\r\nconst CountryList = ({stats}) =>{\r\n    return(\r\n        <div className=\"countrylist\">\r\n        {\r\n          stats.map(country => <Country key={country.CountryCode} stats={country} />)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList;","import React from 'react';\r\nimport './SearchBox.css'\r\n\r\nconst SearchBox  = ({placeholder,handleChange}) => {\r\n    return(\r\n        <input type='search'\r\n        className='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\nimport './App.css';\nimport CountryList from './components/CountryList/CountryList';\nimport SearchBox from './components/SearchBox/SearchBox';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      countries:[],\n      stats:[],\n      searchField:''\n    }\n    // this.handleChange = this.handleChange.bind(this);\n  }\n  async componentDidMount(){\n    const resp = await fetch('https://api.covid19api.com/countries')\n    const countries = await resp.json()\n    this.setState({countries})\n    this.state.countries.forEach(async country => {\n      const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`)\n      const data = await resp.json()\n      if(data.length)\n      this.setState(prevState => (\n        {stats:prevState.stats.concat({...data[data.length - 1], CountryCode:country.ISO2})}\n      ))\n    })\n  }\n\n  handleChange=(e) =>{\n    this.setState({searchField:e.target.value})\n  }\n\n  render(){\n    const {stats,searchField}  = this.state\n    const filteredCountries = stats.filter(country =>(\n      country.Country.toLowerCase().includes(searchField.toLowerCase())\n    ))\n    return(\n       <div className=\"App\">\n       <h1>Covid19 Stats Web App</h1>\n        <SearchBox placeholder=\"Enter country name...\" handleChange={this.handleChange}  />\n        <CountryList stats = {filteredCountries} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}